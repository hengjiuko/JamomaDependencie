/*	xray.dynamicexpr.js by Wesley Smith 8/1/2005*///initialize to empty stringvar expression = new Array();var modExpression = new Array();setoutletassist(-1, describe_out);setinletassist(-1, describe_in);function anything(val){	//check if expression exists	if(expression.length != 0)	{		var re = new RegExp("\\$0");		var concatExpression = "";		for(j=0; j < expression.length; j++)		{			modExpression[j] = expression[j];			//match all max message variable instances ($num)			for(i=1; i <= arguments.length; i++)			{				re.compile("\\$" + i);				while(modExpression[j].search(re) != -1)				{					//if the arguments doesn't have a toPrecision() method, it's a String					try					{						modExpression[j] = modExpression[j].replace(re, arguments[i-1].toPrecision(6));					}					catch(exception)					{						modExpression[j] = modExpression[j].replace(re, arguments[i-1]);					}				}			}			outlet(0, "expr", modExpression);		}			}}function expr(symbol){	for(i=0; i < arguments.length; i++)	{		//take care of special max issues with commas		expression[i] = arguments[i].replace(/,/i, "\\,");	}}function describe_out(num){	assist("jit.expr  expression");}function describe_in(num){	assist("expression / int / float /symbol / list");}